{"ast":null,"code":"import logo from './logo.svg';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n//---END OF REACT STUFF---\\\\\n\n//Fetching API: London Becomes the Default City if Nothing is Provided\n\nconst weatherAPIKey = \"391cbb4a58a8cc222403d449bb858880\";\nconst city = prompt(\"Please Provide the City that You Would Like the Weather To?\");\nconst queryURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weatherAPIKey}`;\nfetch(queryURL).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(`Error: ${error}`));\n\n//Getting Location of User\n\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\nfunction success(pos) {\n  const crd = pos.coords;\n  console.log(`Your Current Location Is:`);\n  console.log(`Latitude: ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or Less: ${crd.accuracy} meters.`);\n}\nfunction error(err) {\n  console.warn(`ERROR: (${err.code}): ${err.message}`);\n}\nnavigator.geolocation.getCurrentPosition(success, error, options);\nexport default App;","map":{"version":3,"names":["logo","weatherAPIKey","city","prompt","queryURL","fetch","then","response","json","data","console","log","catch","error","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","latitude","longitude","accuracy","err","warn","code","message","navigator","geolocation","getCurrentPosition","App"],"sources":["/Users/dan/repos/weather-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n\n\n//---END OF REACT STUFF---\\\\\n\n\n\n//Fetching API: London Becomes the Default City if Nothing is Provided\n\nconst weatherAPIKey = \"391cbb4a58a8cc222403d449bb858880\";\nconst city = prompt(\"Please Provide the City that You Would Like the Weather To?\");\nconst queryURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${weatherAPIKey}`;\nfetch (queryURL)\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error(`Error: ${error}`));\n\n\n//Getting Location of User\n\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0,\n};\n\nfunction success(pos) {\n  const crd = pos.coords;\n\n  console.log(`Your Current Location Is:`);\n  console.log(`Latitude: ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or Less: ${crd.accuracy} meters.`);\n}\n\nfunction error (err) {\n  console.warn(`ERROR: (${err.code}): ${err.message}`);\n}\n\nnavigator.geolocation.getCurrentPosition(success, error, options);\n\nexport default App;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAIA;;AAEA,MAAMC,aAAa,GAAG,kCAAkC;AACxD,MAAMC,IAAI,GAAGC,MAAM,CAAC,6DAA6D,CAAC;AAClF,MAAMC,QAAQ,GAAG,qDAAqDF,IAAI,UAAUD,aAAa,EAAE;AACnGI,KAAK,CAAED,QAAQ,CAAC,CACbE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,UAAUA,KAAK,EAAE,CAAC,CAAC;;AAGnD;;AAEA,MAAMC,OAAO,GAAG;EACdC,kBAAkB,EAAE,IAAI;EACxBC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAE;AACd,CAAC;AAED,SAASC,OAAOA,CAACC,GAAG,EAAE;EACpB,MAAMC,GAAG,GAAGD,GAAG,CAACE,MAAM;EAEtBX,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACxCD,OAAO,CAACC,GAAG,CAAC,aAAaS,GAAG,CAACE,QAAQ,EAAE,CAAC;EACxCZ,OAAO,CAACC,GAAG,CAAC,cAAcS,GAAG,CAACG,SAAS,EAAE,CAAC;EAC1Cb,OAAO,CAACC,GAAG,CAAC,iBAAiBS,GAAG,CAACI,QAAQ,UAAU,CAAC;AACtD;AAEA,SAASX,KAAKA,CAAEY,GAAG,EAAE;EACnBf,OAAO,CAACgB,IAAI,CAAC,WAAWD,GAAG,CAACE,IAAI,MAAMF,GAAG,CAACG,OAAO,EAAE,CAAC;AACtD;AAEAC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACb,OAAO,EAAEL,KAAK,EAAEC,OAAO,CAAC;AAEjE,eAAekB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}